Problem: https://leetcode.com/problems/number-of-subarrays-that-match-a-pattern-i/

Solution:

class Solution {
    public int countMatchingSubarrays(int[] nums, int[] pattern) {
        int count = 0;
        int size = pattern.length;

        boolean res = true;
        for (int i = 0; i < nums.length - size; i++) {
            res = true;
            for (int j = 0; j < size; j++) {
                if (pattern[j] == 1) {
                    if (nums[i + j + 1] <= nums[i + j]) {
                        res = false;
                        break;
                    }
                } else if (pattern[j] == 0) {
                    if (nums[i + j + 1] != nums[i + j]) {
                        res = false;
                        break;
                    }
                } else if (pattern[j] == -1) {
                    if (nums[i + j + 1] >= nums[i + j]) {
                        res = false;
                        break;
                    }
                }
            }
            if (res) {
                ++count;
            }
        }
        return count;
    }
}