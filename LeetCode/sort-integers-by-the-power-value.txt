https://leetcode.com/problems/sort-integers-by-the-power-value/

class Solution {
    List<Integer> list = new ArrayList<Integer>();

    public int getKth(int lo, int hi, int k) {
        Map<Integer, List<Integer>> map = new TreeMap<>();
        for (int i = lo; i <= hi; i++) {
            int count = check(i, 0);
            list.add(count);
            if (map.containsKey(count)) {
                List<Integer> list = map.get(count);
                list.add(i);
                map.put(count, list);
            } else {
                List<Integer> list = new ArrayList<Integer>();
                list.add(i);
                map.put(count, list);
            }
        }

        for (Integer val : map.keySet()) {
            List<Integer> list = map.get(val);
            if (k - list.size() <= 0) {
                Collections.sort(list);
                return list.get(k - 1);
            }
            k = k - list.size();
        }

        return 0;
    }

    public int check(int val, int count) {
        while (val != 1) {
            if (val % 2 == 0) {
                val = val / 2;
            } else {
                val = (val * 3) + 1;
            }
            ++count;
        }
        ++count;
        return count;

    }
}